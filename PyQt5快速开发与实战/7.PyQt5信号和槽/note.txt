
第7章 pyqt5信号与槽


7.1 信号与槽介绍

信号(signal)和槽(slot)是qt中的核心机制，也是pyqt变成中对象之间进行通信的机制
当信号发射时，连接的槽函数将会自动执行。
在Pyqt5中信号与槽通过objetct.signal.connect()方法连接

一个信号可以连接多个槽
一个信号可以连接另一个信号
信号参数可以是任何python类型
一个槽可以监听多个信号
信号与槽的连接方式可以是同步连接，也可以是异步连接
信号与槽的连接可能会跨线程
信号可能会断开

7.3.1 高级自定义信号与槽
1.定义信号
通过类成员变量定义信号对象
2.定义槽桉树

定义一个槽函数，

3.连接信号与槽函数
通过connect方法连接信号与槽函数或可调用函数

4.发射信号

通过emit方法发射信号

5.实例

7.3.2  使用自定义参数
有一个信号与槽函数的连接

button1.clicked.connect(show_page)

7.3.3 装饰器信号与槽

就是通过装饰器的方法来定义信号和槽函数

7.3.4 信号与槽的断开和连接

7.3.5 qt designer：界面显示与业务逻辑的分离

7.3.6 多线程中信号与槽的使用

7.4 事件处理机制入门

7.4.1 事件和信号与槽的去吧


信号与槽可以说是对事件处理机制的高级封装，如果说事件是用来创建窗口控件的，
那么信号和槽就是用来对这个窗口控件进行使用的。

7.4.2 常见的事件类型
键盘事件
鼠标事件
拖放事件
滚轮事件
绘屏事件
定时事件
焦点事件
进入和离开事件
移动事件
大小改变事件
显示和隐藏事件：
窗口事件


7.4.3 使用事件处理的方法

(1) 重新实现事件函数
(2) 重新实现 QObjetct.event()
(3) 安装事件过滤器
(4) 在QApplication中安装事件过滤器
(5) 重新实现QApplication的notify()方法

7.4.4 经典案例分析

7.5 窗口数据传递

7.5.1 单一窗口数据传递
7.5.2 多窗口数据传递：调用属性
7.5.3 多窗口数据传递：信号与槽

对于多窗口的数据传递，一般是通过子窗口发射信号的，主窗口通过槽函数捕获这个信号，
然后获取信号里面的数据。
子窗口发射的信号有两种，其中一种是发射PyQt内置的一些信号；另一种是发射自定义的新阿红。

这两种方式的信号与槽机制在
