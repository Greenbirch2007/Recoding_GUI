
pyinstaler myscript.py

pyinstaller --onefile --windowed myscript.py

不同的操作系统生成的应用程序可能无法兼容

文本分析

Pyinstaller：

１．可以再pyinstaller命令行上提供其他文件
2.可以在命令行上提供其他导入路径
3.可以编辑pyinstaller在第一次为脚本运行时编写myscript.spec文件
。在spec文件中，可以告诉pyinstaller有关脚本特有的代码ｍｏｋ
4.可以编写"钩子"文件，通知pyinstaller隐藏的导入。
如果为其他用户也可能使用的包创建"挂钩"，则可以将挂钩
文件提供给pyinstaller
５．如果你的程序依赖于对某些数据文件的访问，也可以告诉pyinstaler
将它们包含再捆绑包中，也可以通过修改spec文件来执行此操作

捆绑到一个文件夹


将pyinstaller应用与myscript.py时，默认结果是名为myscipt
的单个文件夹。此文件夹包含所有脚本的
依赖项，以及一个名为myscript的可孩子能够文件
(window中的myscript.exe)

可以将该文件夹压缩为myscript.zip并将其传输给您的用户。他们只需
解压缩即可安装程序。用户通过打开文件夹并在其中启动myscript可执行
文件来运行您的应用程序

在使用单个文件夹模式时，可以轻松调试在构建应用程序时出现的问题。
可以准确地看到pyinstaller收集到文件夹中的文件


单文件夹包的另一个优点是，当更改代码时，只要它导入完全相同的
依赖项集，就可以只发送更新的ｍyscript可执行文件。这通常比整个文件夹小得多

单文件夹格式的缺点，一个文件夹包含大量文件。您的用户必须在一长串
名称或大量图标中找到myscrpt可执行文件。此外，您的用户可能会意外
地将文件脱出文件夹，从而产生问题


捆绑到一个文件

pyinstaller可以将您的脚本及其所有依赖捆绑到一个名为myscript的
可执行文件(windows中的myscript.exe)中


优点是你的用户可以获得他们理解的内容，即可以启动的单个可执行文件。
缺点是任何相关文件(如README)必须单独分发。此外，单个可执行文件的启动
速度比单个文件夹捆绑包慢一点

在尝试捆绑到一个文件之前，请确保捆绑到一个文件夹时应用程序正常工作。
在单个文件夹模式下诊断问题要容易得多

特别题型

不要将管理员权限授予单个文件可执行文件(unix/linux中的setuid root,
windows7中的"以管理员身份运行此程序"属性)

在引导加载程序准备它时，恶意攻击者可能会破坏临时文件夹中的一个共享库，
这是一种不太可能但并非不可能的方式。
改为以单文件夹模式分发特权程序


使用os.setuid()的应用程序可能会遇到权限错误。调用setuid后，
捆绑的应用程序运行的临时内文件夹可能无法读取。
如果你的脚本需要调用setuid,最好使用单文件夹模式，以便更好地控制其文件的
权限

使用控制台窗口


默认情况看下，引导加载程序会创建一个命令行控制台(linux中的终端窗口，
windows的命令窗口)。它为Python解释器提供了标准输入和输出的窗口。

你的脚本使用print和input()是针对此处的。
来自python的错误消息和默认日志记录输出也出现在控制台窗口中


windows的一个选项是告诉pyinstaller不提供控制台窗口。引导加载
程序启动python，没有标准输出或输入的目标。当脚本具有用于用户输入的
图形界面并且可以正确报告其自己的诊断时，请执行此操作


隐藏源代码


捆绑的应用程序不包含任何源代码。但是,pyinstaller捆绑了编译的
python脚本(.pyc文件)。这些原则上可以被反编译以揭示代码的逻辑

如果像更彻底隐藏源代码，可以选择使用Cython编译一些模块。
使用Cython，可以将Python模块转换为C并将C编译为机器语言


pyinstaller可以遵循引用Cython的Ｃ对象模块的import语句
并将它们捆绑在一起

通过在pyinstaller的命令行上指定加密密钥，可以使用AES256对
python字节码进行模糊处理。
请注意，提取密钥并获取原始字节码仍然很容易，但它们应该可以
防止大多数形式的“随意”篡改


pyinstaller安装


pip install pyinstaller


pyinstaller命令的语法是：

pyinstaller [options] script [script …] | specfile


在最简单的情况下，将当前的目录设置为程序myscript.py的位置并执行

pyinstaller myscript.py

pyinstaller分析myscript.py并执行以下操作：

1.将myscript.spec写入与脚本相同的文件夹中
２．如果文件夹不存在，则与脚本相同的文件夹中创建文件夹
３．在build文件夹中写入一些日志文件和工作文件
4.如果文件夹不存在，则在与脚本相同的文件夹中创建文件夹dist
５．在dist文件夹中写入myscript可执行文件夹
6.在dist文件夹中，可以找到分发飞用户的捆绑应用程序

针对不同python版本

推荐使用virtualenv

为了实现超薄应用程序，建议创建一个仅包含应用程序所需依赖项的virtulenv

针对不同操作系统

要在每个平台上安装pyinstaller，并在每个平台上单独捆绑你的应用程序


构建时消息
构建时错误
扩展令

简单的打包
https://mp.weixin.qq.com/s?__biz=MzIxNDMzMDQ2OQ==&mid=2247486248&idx=1&sn=3483ef8b81d60edef6111d6e83be230c&chksm=97a87622a0dfff349c1da4173c3cf4c2d8661cf0dd6f8fc91f2876ec41e56b6089752ef4e0d9&mpshare=1&scene=1&srcid=0708Fjv7gXWl9QxdR8vwzTq3&sharer_sharetime=1563866911146&sharer_shareid=5baeb4516dc33f60573dd0b37ccd54cf&pass_ticket=5K%2BDIDb8u2lMCYkVyFATJXuVEQnIR%2B2%2BAae8SyJW%2B0owmMl0L88TqdqQBl9w2z1J#rd
在屏幕上出现大量的INFO信息后，我们看到







